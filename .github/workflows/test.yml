name: Tests
on: push
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Go only supports 2x revisions at once
        go-version: [1.18.x, 1.19.x]
    services:
      nats:
        image: nats
        ports:
          - 4222:4222
      nats-auth:
        image: ghcr.io/overmindtech/test-populated-nats:main
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 4223:4222
      api-server:
        image: ghcr.io/overmindtech/test-populated-api-server:main
        env:
          # This is the URL of the nats-auth container above. Thankfully github
          # creates all service containers on the same network, and with a nice
          # network alias so we can use docker-provided DNS to have them talk to
          # one another
          NATS_URL: nats://nats-auth:4222
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
  
    - name: Test
      env:
        OVERMIND_NTE_ALLPERMS_CLIENT_ID: ${{ secrets.OVERMIND_NTE_ALLPERMS_CLIENT_ID }}
        OVERMIND_NTE_ALLPERMS_CLIENT_SECRET: ${{ secrets.OVERMIND_NTE_ALLPERMS_CLIENT_SECRET }}
        OVERMIND_NTE_ALLPERMS_DOMAIN: ${{ secrets.OVERMIND_NTE_ALLPERMS_DOMAIN }}
      run: go test -timeout 60s ./... -race

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - test
    steps:
      # Creates a release and attaches
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
