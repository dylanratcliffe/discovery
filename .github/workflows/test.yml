name: Tests
on: push
jobs:
  test:
    name: test
    runs-on: depot-ubuntu-22.04-8
    strategy:
      matrix:
        # for now only support 1.22 for loopvar change
        go-version: [1.22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # also fetch tags and branches for `git describe`

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Go Generate
        run: go generate ./...

      - name: Go vet
        run: go vet ./...

      - name: re-export environment
        run: |
          grep -h '^[^#]' .github/env/*.env | sort -u | tee -a "${GITHUB_ENV}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Compose Action
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: ".github/docker-compose-services.yml"
        env:
          HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }}

      - name: Test
        run: go test ./... -race -timeout 2m
        env:
          API_SERVER_AUDIENCE: ${{ vars.API_SERVER_AUDIENCE }}
          OVERMIND_NTE_ALLPERMS_CLIENT_ID: ${{ secrets.OVERMIND_NTE_ALLPERMS_CLIENT_ID }}
          OVERMIND_NTE_ALLPERMS_CLIENT_SECRET: ${{ secrets.OVERMIND_NTE_ALLPERMS_CLIENT_SECRET }}
          OVERMIND_NTE_ALLPERMS_DOMAIN: ${{ secrets.OVERMIND_NTE_ALLPERMS_DOMAIN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - test

    steps:
      # Creates a release and attaches
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
